name: 'Terraform Plan'
description: 'terraform plan commands'
outputs:
  has_changes:
    value: ${{ steps.terraform_plan_has_changes.outputs.has_changes }} > 0
    description: 'Indica se houve alteração para plan'
inputs:
  aws_account_number:
    description: 'Account Number'
    required: true
    default: '067408622363'
  aws_role_name:
    description: 'Aws role with polices to deploy'
    required: true
    default: 'github-actions'
  aws_region: 
    description: 'Aws region'
    required: true
    default: 'us-east-1'
  s3_upload_destiny: 
    description: 'Bucket to Upload'
    required: false
    default: ''


runs:
  using: composite
  steps:

  - name: configure aws credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: arn:aws:iam::${{ inputs.aws_account_number }}:role/${{ inputs.aws_role_name }}
      role-session-name: ${{ inputs.aws_role_name }}
      aws-region: ${{ inputs.aws_region }}

  - name: Download Artifact
    uses: actions/download-artifact@v4
    with:
      name: terraform

  - name: Set permissions for Terraform providers
    shell: bash
    run: |
      chmod -R +x .
      ls -ltra

  - name: Check Has Changes
    id: terraform_plan_has_changes
    shell: bash
    run: |
      terraform plan -no-color -detailed-exitcode > result || echo "has_changes=$?" >> $GITHUB_OUTPUT

  - name: Do something with Terraform plan output
    if: ${{ steps.terraform_plan_has_changes.outputs.has_changes }} > 0
    shell: bash
    run: |
      terraform plan -no-color | tee changes.txt

  - name: Upload artifact
    if: ${{ steps.terraform_plan_has_changes.outputs.has_changes }} > 0
    uses: actions/upload-artifact@v4
    with:
      name: changes.txt
      path: changes.txt
      retention-days: 1

  - name: Upload to S3
    if: ${{ inputs.s3_upload_destiny != '' }}
    shell: bash
    run: |
      aws s3 cp changes.txt ${{ inputs.s3_upload_destiny }}.txt